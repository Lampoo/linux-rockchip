/*
 * Copyright (c) 2016 Fuzhou Rockchip Electronics Co., Ltd
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This library is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This library is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/ {
	chosen {
		bootargs = "rockchip_jtag earlyprintk=uart8250-32bit,0xff130000 clk_ignore_unused";
	};

	fiq-debugger {
		status = "okay";
	};

	io-domains {
		status = "okay";

		vccio1-supply = <&rk805_dcdc4_reg>;
		vccio2-supply = <&rk805_ldo2_reg>;
		vccio3-supply = <&rk805_dcdc4_reg>;
		vccio4-supply = <&rk805_ldo1_reg>;
		vccio5-supply = <&rk805_dcdc4_reg>;
		vccio6-supply = <&rk805_dcdc4_reg>;
		pmuio-supply = <&rk805_dcdc4_reg>;
	};

	/* pmic_sleep */
	gpio_poweroff {
		compatible = "gpio-poweroff";
		gpios = <&gpio2 GPIO_D2 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};
};

&i2c1 {
	rk805: rk805@18 {
		reg = <0x18>;
		status = "okay";
	};
};

#include "../../../arm/boot/dts/rk805.dtsi"
&rk805 {
	gpios = <&gpio2 GPIO_A6 GPIO_ACTIVE_HIGH>, <&gpio2 GPIO_D2 GPIO_ACTIVE_LOW>;
	rk805,system-power-controller;
	gpio-controller;
	#gpio-cells = <2>;

	regulators {
		rk805_dcdc1_reg: regulator@0 {
			regulator-name = "vdd_logic";
			regulator-min-microvolt = <700000>;
			regulator-max-microvolt = <1500000>;
			regulator-initial-mode = <0x1>;
			regulator-initial-state = <3>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-state-mode = <0x2>;
				regulator-state-enabled;
				regulator-state-uv = <1000000>;
			};
		};

		rk805_dcdc2_reg: regulator@1 {
			regulator-name = "vdd_arm";
			regulator-min-microvolt = <700000>;
			regulator-max-microvolt = <1500000>;
			regulator-initial-mode = <0x1>;
			regulator-initial-state = <3>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-state-mode = <0x2>;
				regulator-state-enabled;
				regulator-state-uv = <900000>;
			};
		};

		rk805_dcdc3_reg: regulator@2 {
			regulator-name = "vcc_ddr";
			regulator-min-microvolt = <1200000>;
			regulator-max-microvolt = <1200000>;
			regulator-initial-mode = <0x1>;
			regulator-initial-state = <3>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-state-mode = <0x2>;
				regulator-state-enabled;
				regulator-state-uv = <1200000>;
			};
		};

		rk805_dcdc4_reg: regulator@3 {
			regulator-name = "vcc_io";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-initial-mode = <0x1>;
			regulator-initial-state = <3>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-state-mode = <0x2>;
				regulator-state-enabled;
				regulator-state-uv = <3300000>;
			};
		};

		rk805_ldo1_reg: regulator@4 {
			regulator-name = "vdd_18";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-initial-state = <3>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-state-enabled;
				regulator-state-uv = <1800000>;
			};
		};

		rk805_ldo2_reg: regulator@5 {
			regulator-name = "vcc_18emmc";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-initial-state = <3>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-state-enabled;
				regulator-state-uv = <1800000>;
			};
		};

		rk805_ldo3_reg: regulator@6 {
			regulator-name = "vdd_10";
			regulator-min-microvolt = <1000000>;
			regulator-max-microvolt = <1000000>;
			regulator-initial-state = <3>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-state-enabled;
				regulator-state-uv = <1000000>;
			};
		};
	};
};
