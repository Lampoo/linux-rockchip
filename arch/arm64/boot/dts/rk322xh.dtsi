/*
 * Copyright (c) 2016 Fuzhou Rockchip Electronics Co., Ltd
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This library is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This library is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/pinctrl/rockchip.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/sensor-dev.h>
#include <dt-bindings/clock/rk_system_status.h>
#include "rk322xh-clocks.dtsi"

/ {
	compatible = "rockchip,rk322xh";

	rockchip,sram = <&sram>;
	interrupt-parent = <&gic>;
	#address-cells = <2>;
	#size-cells = <2>;

	aliases {
		serial2 = &uart_dbg;
	};

	cpus {
		#address-cells = <2>;
		#size-cells = <0>;

		cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a53", "arm,armv8";
			reg = <0x0 0x0>;
			enable-method = "psci";
		};
		cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a53", "arm,armv8";
			reg = <0x0 0x1>;
			enable-method = "psci";
		};
		cpu@2 {
			device_type = "cpu";
			compatible = "arm,cortex-a53", "arm,armv8";
			reg = <0x0 0x2>;
			enable-method = "psci";
		};
		cpu@3 {
			device_type = "cpu";
			compatible = "arm,cortex-a53", "arm,armv8";
			reg = <0x0 0x3>;
			enable-method = "psci";
		};
	};

	arm-pmu {
		compatible = "arm,armv8-pmuv3";
		interrupts = <GIC_SPI 112 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 113 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 114 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 115 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 116 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 117 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 118 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 119 IRQ_TYPE_LEVEL_HIGH>;
	};

	timer {
		compatible = "arm,armv8-timer";
		interrupts = <GIC_PPI 13 (GIC_CPU_MASK_SIMPLE(8) | IRQ_TYPE_LEVEL_HIGH)>,
			     <GIC_PPI 14 (GIC_CPU_MASK_SIMPLE(8) | IRQ_TYPE_LEVEL_HIGH)>,
			     <GIC_PPI 11 (GIC_CPU_MASK_SIMPLE(8) | IRQ_TYPE_LEVEL_HIGH)>,
			     <GIC_PPI 10 (GIC_CPU_MASK_SIMPLE(8) | IRQ_TYPE_LEVEL_HIGH)>;
		clock-frequency = <24000000>;
	};

	fiq-debugger {
		compatible = "rockchip,fiq-debugger";
		rockchip,serial-id = <2>;
		rockchip,signal-irq = <186>;
		rockchip,wake-irq = <0>;
		rockchip,irq-mode-enable = <1>;  /* If enable uart uses irq instead of fiq */
		rockchip,baudrate = <1500000>;  /* Only 115200 and 1500000 */
		status = "disabled";
	};

	rockchip_clocks_init: clocks-init {
		compatible = "rockchip,clocks-init";
		rockchip,clocks-init-parent =
			<&clk_i2s0_pll &clk_cpll>, <&clk_i2s1_pll &clk_cpll>,
			<&clk_i2s2_pll &clk_cpll>, <&clk_spdif_pll &clk_cpll>,
			<&hdmi_phy_clk &hdmiphy_out>, <&usb480m &usbphy_480m>;
		rockchip,clocks-init-rate =
			<&clk_gpll 983040000>, <&clk_core 600000000>,
			<&clk_cpll 1200000000>, <&aclk_bus 150000000>,
			<&hclk_bus 75000000>, <&pclk_bus 75000000>,
			<&clk_crypto 150000000>, <&aclk_peri 150000000>,
			<&hclk_peri 75000000>, <&pclk_peri 75000000>,
			<&aclk_vio 200000000>, <&hclk_vio 100000000>,
			<&aclk_rga 200000000>, <&clk_rga 200000000>,
			<&aclk_vop 300000000>, <&aclk_rkvdec 400000000>,
			<&aclk_rkvenc 200000000>, <&aclk_vpu 300000000>,
			<&clk_vdec_cabac 300000000>, <&clk_vdec_core 200000000>,
			<&clk_venc_core 200000000>, <&clk_venc_dsp 100000000>,
			<&clk_efuse 24000000>, <&clk_pdm 61440000>;
		/*rockchip,clocks-uboot-has-init =
			<&dclk_vop>, <&dclk_vop_pll>;*/
		rockchip,set_div_for_pll_init;
	};

	rockchip_clocks_enable: clocks-enable {
		compatible = "rockchip,clocks-enable";
		clocks =
			/* PLL */
			<&clk_apll>,
			<&clk_dpll>,
			<&clk_gpll>,
			<&clk_cpll>,

			/* PD_CORE */
			<&clk_gates13 0>, /* aclk_core_noc */
			<&clk_gates13 1>, /* aclk_gic */

			/* PD_BUS */
			<&aclk_bus>,
			<&hclk_bus>,
			<&pclk_bus>,
			<&clk_gates15 0>, /* aclk_intmem */
			<&clk_gates15 12>, /* aclk_bus_noc */
			<&clk_gates15 1>, /* aclk_dmac_bus */
			<&clk_gates15 2>, /* hclk_rom */
			<&clk_gates15 13>, /* hclk_bus_noc */
			<&clk_gates15 14>, /* pclk_bus_noc */
			<&clk_gates15 9>, /* pclk_efuse */
			<&clk_gates28 4>, /* pclk_otp */
			<&clk_gates17 0>, /* pclk_grf */
			<&clk_gates17 4>, /* pclk_cru */
			<&clk_gates17 6>, /* pclk_sgrf */
			<&clk_gates17 10>, /* pclk_sim */
			<&clk_gates28 1>, /* pclk_pmu */
			<&clk_gates17 14>, /* pclk_usb2grf */
			<&clk_gates17 2>, /* pclk_usb3grf */
			<&clk_gates17 3>, /* pclk_ddrphy */
			<&clk_gates15 15>, /* pclk_phy_niu */
			<&clk_gates16 3>, /* pclk_timer0 */
			<&clk_gates16 4>, /* pclk_stimer */

			/* PD_PERI */
			<&aclk_peri>,
			<&hclk_peri>,
			<&pclk_peri>,
			<&clk_gates19 11>, /* aclk_peri_noc */
			<&clk_gates19 7>, /* hclk_host0_arb */
			<&clk_gates19 12>, /* hclk_peri_noc */
			<&clk_gates19 13>, /* pclk_peri_noc */
			<&clk_gates19 9>, /* hclk_otg_pmu */

			/* PD_DDR */
			<&clk_gates18 1>, /* pclk_ddrctrl */
			<&clk_gates18 2>, /* pclk_ddr_msch */
			<&clk_gates18 3>, /* pclk_ddr_mon */
			<&clk_gates18 9>, /* pclk_ddr_grf */

			/* PD_GMAC */
			<&clk_gates26 4>, /* aclk_gmac_niu */
			<&clk_gates26 5>, /* pclk_gmac_niu */

			/* PD_VIO */
			<&clk_gates22 3>, /* aclk_rga_niu */
			<&clk_gates21 4>, /* aclk_vop_niu */
			<&clk_gates22 2>, /* aclk_vio_niu */
			<&clk_gates21 5>, /* hclk_vop_niu */
			<&clk_gates21 12>, /* hclk_ahb1tom */
			<&clk_gates22 0>, /* hclk_hdcp_mmu */
			<&clk_gates22 1>, /* hclk_vio_noc */

			/* PD_VIDEO */
			<&clk_gates23 2>, /* aclk_vpu_noc */
			<&clk_gates23 3>, /* hclk_vpu_noc */
			<&clk_gates24 2>, /* aclk_rkvdec_noc */
			<&clk_gates24 3>, /* hclk_rkvdec_noc */
			<&clk_gates25 0>, /* aclk_rkvenc_noc */
			<&clk_gates25 1>, /* hclk_rkvenc_noc */

			<&clk_gates14 1>, /* clk_gpu_noc */
			<&clk_gates7 2>; /* clk_jtag */
	};

	sram: sram@ff090000 {
		compatible = "mmio-sram";
		reg = <0x0 0xff090000 0x0 0x9000>; /* 36KB */
		map-exec;
	};

	grf: syscon@ff100000 {
		compatible = "rockchip,rk322xh-grf", "rockchip,grf", "syscon";
		reg = <0x0 0xff100000 0x0 0x1000>;
	};

	uart_dbg: serial@ff130000 {
		compatible = "rockchip,serial";
		reg = <0x0 0xff130000 0x0 0x100>;
		interrupts = <GIC_SPI 57 IRQ_TYPE_LEVEL_HIGH>;
		clock-frequency = <24000000>;
		clocks = <&clk_uart2>, <&clk_gates16 13>;
		clock-names = "sclk_uart", "pclk_uart";
		reg-shift = <2>;
		reg-io-width = <4>;
		status = "disabled";
	};

	pmu: syscon@ff140000 {
		compatible = "rockchip,rk322xh-pmu", "rockchip,pmu", "syscon";
		reg = <0x0 0xff140000 0x0 0x1000>;
	};

	timer@ff1c0000 {
		compatible = "rockchip,timer";
		reg = <0x0 0xff1c0000 0x0 0x20>;
		interrupts = <GIC_SPI 43 IRQ_TYPE_LEVEL_HIGH>;
		rockchip,broadcast = <1>;
	};

	cru: syscon@ff440000 {
		compatible = "rockchip,rk322xh-cru", "rockchip,cru", "syscon";
		reg = <0x0 0xff440000 0x0 0x1000>;
	};

	msch: syscon@ff720000 {
		compatible = "rockchip,rk322xh-msch", "rockchip,msch", "syscon";
		reg = <0x0 0xff720000 0x0 0x3000>;
	};

	gic: interrupt-controller@ffb70000 {
		compatible = "arm,cortex-a15-gic";
		#interrupt-cells = <3>;
		#address-cells = <0>;
		interrupt-controller;
		reg = <0x0 0xff811000 0 0x1000>,
		      <0x0 0xff812000 0 0x1000>;
	};

	pinctrl: pinctrl {
		compatible = "rockchip,rk322xh-pinctrl";
		rockchip,grf = <&grf>;
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		gpio0: gpio0@ff210000 {
			compatible = "rockchip,gpio-bank";
			reg = <0x0 0xff210000 0x0 0x100>;
			interrupts = <GIC_SPI 51 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&clk_gates16 7>;

			gpio-controller;
			#gpio-cells = <2>;

			interrupt-controller;
			#interrupt-cells = <2>;
		};

		gpio1: gpio1@ff220000 {
			compatible = "rockchip,gpio-bank";
			reg = <0x0 0xff220000 0x0 0x100>;
			interrupts = <GIC_SPI 52 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&clk_gates16 8>;

			gpio-controller;
			#gpio-cells = <2>;

			interrupt-controller;
			#interrupt-cells = <2>;
		};

		gpio2: gpio2@ff230000 {
			compatible = "rockchip,gpio-bank";
			reg = <0x0 0xff230000 0x0 0x100>;
			interrupts = <GIC_SPI 53 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&clk_gates16 9>;

			gpio-controller;
			#gpio-cells = <2>;

			interrupt-controller;
			#interrupt-cells = <2>;
		};

		gpio3: gpio3@ff240000 {
			compatible = "rockchip,gpio-bank";
			reg = <0x0 0xff240000 0x0 0x100>;
			interrupts = <GIC_SPI 54 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&clk_gates16 10>;

			gpio-controller;
			#gpio-cells = <2>;

			interrupt-controller;
			#interrupt-cells = <2>;
		};

		pcfg_pull_up: pcfg-pull-up {
			bias-pull-up;
		};

		pcfg_pull_down: pcfg-pull-down {
			bias-pull-down;
		};

		pcfg_pull_none: pcfg-pull-none {
			bias-disable;
		};

		pcfg_pull_none_drv_8ma: pcfg-pull-none-drv-8ma {
			drive-strength = <8>;
		};

		pcfg_pull_none_drv_12ma: pcfg-pull-none-drv-12ma {
			drive-strength = <12>;
		};

		pcfg_pull_up_drv_8ma: pcfg-pull-up-drv-8ma {
			bias-pull-up;
			drive-strength = <8>;
		};

		pcfg_pull_none_drv_4ma: pcfg-pull-none-drv-4ma {
			drive-strength = <4>;
		};

		pcfg_pull_up_drv_4ma: pcfg-pull-up-drv-4ma {
			bias-pull-up;
			drive-strength = <4>;
		};

		pcfg_pull_down_drv_12ma: pcfg-pull-down-drv-12ma {
			bias-pull-down;
			drive-strength = <12>;
		};

		pcfg_output_high: pcfg-output-high {
			output-high;
		};

		pcfg_output_low: pcfg-output-low {
			output-low;
		};

		pcfg_input_high: pcfg-input-high {
			bias-pull-up;
			input-enable;
		};

		i2c0 {
			i2c0_xfer: i2c0-xfer {
				rockchip,pins =
					<2 GPIO_D0 RK_FUNC_1 &pcfg_pull_up_drv_4ma>,
					<2 GPIO_D1 RK_FUNC_1 &pcfg_pull_none>;
			};
		};

		i2c1 {
			i2c1_xfer: i2c1-xfer {
				rockchip,pins =
					<2 GPIO_A4 RK_FUNC_2 &pcfg_pull_none>,
					<2 GPIO_A5 RK_FUNC_2 &pcfg_pull_none>;
			};
		};

		i2c2 {
			i2c2_xfer: i2c2-xfer {
				rockchip,pins =
					<2 GPIO_B5 RK_FUNC_1 &pcfg_pull_up_drv_4ma>,
					<2 GPIO_B6 RK_FUNC_1 &pcfg_pull_down_drv_12ma>;
			};
		};

		i2c3 {
			i2c3_xfer: i2c3-xfer {
				rockchip,pins =
					<0 GPIO_A5 RK_FUNC_2 &pcfg_pull_none>,
					<0 GPIO_A6 RK_FUNC_2 &pcfg_pull_none>;
			};
		};

		hdmi_i2c {
			hdmii2c_xfer: hdmii2c-xfer {
				rockchip,pins =
					<0 GPIO_A5 RK_FUNC_1 &pcfg_pull_none>,
					<0 GPIO_A6 RK_FUNC_1 &pcfg_pull_none>;
			};
		};

		uart0 {
			uart0_xfer: uart0-xfer {
				rockchip,pins =
					<1 GPIO_B1 RK_FUNC_1 &pcfg_pull_up>,
					<1 GPIO_B0 RK_FUNC_1 &pcfg_pull_none>;
			};

			uart0_cts: uart0-cts {
				rockchip,pins =
					<1 GPIO_B3 RK_FUNC_1 &pcfg_pull_none>;
			};

			uart0_rts: uart0-rts {
				rockchip,pins =
					<1 GPIO_B2 RK_FUNC_1 &pcfg_pull_none>;
			};

			uart0_rts_gpio: uart0-rts-gpio {
				rockchip,pins =
					<1 GPIO_B2 RK_FUNC_GPIO &pcfg_pull_none>;
			};
		};

		uart1 {
			uart1_xfer: uart1-xfer {
				rockchip,pins =
					<3 GPIO_A4 RK_FUNC_4 &pcfg_pull_up>,
					<3 GPIO_A6 RK_FUNC_4 &pcfg_pull_none>;
			};

			uart1_cts: uart1-cts {
				rockchip,pins =
					<3 GPIO_A7 RK_FUNC_4 &pcfg_pull_none>;
			};

			uart1_rts: uart1-rts {
				rockchip,pins =
					<3 GPIO_A5 RK_FUNC_4 &pcfg_pull_none>;
			};

			uart1_rts_gpio: uart1-rts-gpio {
				rockchip,pins =
					<3 GPIO_A5 RK_FUNC_GPIO &pcfg_pull_none>;
			};
		};

		uart2-0 {
			uart2m0_xfer: uart2m0-xfer {
				rockchip,pins =
					<1 GPIO_A0 RK_FUNC_2 &pcfg_pull_up>,
					<1 GPIO_A1 RK_FUNC_2 &pcfg_pull_none>;
			};
		};

		uart2-1 {
			uart2m1_xfer: uart2m1-xfer {
				rockchip,pins =
					<2 GPIO_A0 RK_FUNC_1 &pcfg_pull_up>,
					<2 GPIO_A1 RK_FUNC_1 &pcfg_pull_none>;
			};
		};

		spi0-0 {
			spi0m0_clk: spi0m0-clk {
				rockchip,pins =
					<2 GPIO_B0 RK_FUNC_1 &pcfg_pull_up>;
			};

			spi0m0_cs0: spi0m0-cs0 {
				rockchip,pins =
					<2 GPIO_B3 RK_FUNC_1 &pcfg_pull_up>;
			};

			spi0m0_tx: spi0m0-tx {
				rockchip,pins =
					<2 GPIO_B1 RK_FUNC_1 &pcfg_pull_up>;
			};

			spi0m0_rx: spi0m0-rx {
				rockchip,pins =
					<2 GPIO_B2 RK_FUNC_1 &pcfg_pull_up>;
			};

			spi0m0_cs1: spi0m0-cs1 {
				rockchip,pins =
					<2 GPIO_B4 RK_FUNC_1 &pcfg_pull_up>;
			};
		};

		spi0-1 {
			spi0m1_clk: spi0m1-clk {
				rockchip,pins =
					<3 GPIO_C7 RK_FUNC_2 &pcfg_pull_up>;
			};

			spi0m1_cs0: spi0m1-cs0 {
				rockchip,pins =
					<3 GPIO_D2 RK_FUNC_2 &pcfg_pull_up>;
			};

			spi0m1_tx: spi0m1-tx {
				rockchip,pins =
					<3 GPIO_D1 RK_FUNC_2 &pcfg_pull_up>;
			};

			spi0m1_rx: spi0m1-rx {
				rockchip,pins =
					<3 GPIO_D0 RK_FUNC_2 &pcfg_pull_up>;
			};

			spi0m1_cs1: spi0m1-cs1 {
				rockchip,pins =
					<3 GPIO_D3 RK_FUNC_2 &pcfg_pull_up>;
			};
		};

		spi0-2 {
			spi0m2_clk: spi0m2-clk {
				rockchip,pins =
					<3 GPIO_A0 RK_FUNC_4 &pcfg_pull_up>;
			};

			spi0m2_cs0: spi0m2-cs0 {
				rockchip,pins =
					<3 GPIO_B0 RK_FUNC_3 &pcfg_pull_up>;
			};

			spi0m2_tx: spi0m2-tx {
				rockchip,pins =
					<3 GPIO_A1 RK_FUNC_4 &pcfg_pull_up>;
			};

			spi0m2_rx: spi0m2-rx {
				rockchip,pins =
					<3 GPIO_A2 RK_FUNC_4 &pcfg_pull_up>;
			};
		};

		i2s1 {
			i2s1_mclk: i2s1-mclk {
				rockchip,pins =
					<2 GPIO_B7 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s1_sclk: i2s1-sclk {
				rockchip,pins =
					<2 GPIO_C2 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s1_lrckrx: i2s1-lrckrx {
				rockchip,pins =
					<2 GPIO_C0 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s1_lrcktx: i2s1-lrcktx {
				rockchip,pins =
					<2 GPIO_C1 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s1_sdi: i2s1-sdi {
				rockchip,pins =
					<2 GPIO_C3 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s1_sdo: i2s1-sdo {
				rockchip,pins =
					<2 GPIO_C7 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s1_sdio1: i2s1-sdio1 {
				rockchip,pins =
					<2 GPIO_C4 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s1_sdio2: i2s1-sdio2 {
				rockchip,pins =
					<2 GPIO_C5 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s1_sdio3: i2s1-sdio3 {
				rockchip,pins =
					<2 GPIO_C6 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s1_sleep: i2s1-sleep {
				rockchip,pins =
					<2 GPIO_B7 RK_FUNC_GPIO &pcfg_input_high>,
					<2 GPIO_C0 RK_FUNC_GPIO &pcfg_input_high>,
					<2 GPIO_C1 RK_FUNC_GPIO &pcfg_input_high>,
					<2 GPIO_C2 RK_FUNC_GPIO &pcfg_input_high>,
					<2 GPIO_C3 RK_FUNC_GPIO &pcfg_input_high>,
					<2 GPIO_C4 RK_FUNC_GPIO &pcfg_input_high>,
					<2 GPIO_C5 RK_FUNC_GPIO &pcfg_input_high>,
					<2 GPIO_C6 RK_FUNC_GPIO &pcfg_input_high>,
					<2 GPIO_C7 RK_FUNC_GPIO &pcfg_input_high>;
			};
		};

		i2s2-0 {
			i2s2m0_mclk: i2s2m0-mclk {
				rockchip,pins =
					<1 GPIO_C5 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s2m0_sclk: i2s2m0-sclk {
				rockchip,pins =
					<1 GPIO_C6 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s2m0_lrckrx: i2s2m0-lrckrx {
				rockchip,pins =
					<1 GPIO_D2 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s2m0_lrcktx: i2s2m0-lrcktx {
				rockchip,pins =
					<1 GPIO_C7 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s2m0_sdi: i2s2m0-sdi {
				rockchip,pins =
					<1 GPIO_D0 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s2m0_sdo: i2s2m0-sdo {
				rockchip,pins =
					<1 GPIO_D1 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s2m0_sleep: i2s2m0-sleep {
				rockchip,pins =
					<1 GPIO_C5 RK_FUNC_GPIO &pcfg_input_high>,
					<1 GPIO_C6 RK_FUNC_GPIO &pcfg_input_high>,
					<1 GPIO_D2 RK_FUNC_GPIO &pcfg_input_high>,
					<1 GPIO_C7 RK_FUNC_GPIO &pcfg_input_high>,
					<1 GPIO_D0 RK_FUNC_GPIO &pcfg_input_high>,
					<1 GPIO_D1 RK_FUNC_GPIO &pcfg_input_high>;
			};
		};

		i2s2-1 {
			i2s2m1_mclk: i2s2m1-mclk {
				rockchip,pins =
					<1 GPIO_C5 RK_FUNC_1 &pcfg_pull_none>;
			};

			i2s2m1_sclk: i2s2m1-sclk {
				rockchip,pins =
					<3 GPIO_A0 RK_FUNC_6 &pcfg_pull_none>;
			};

			i2s2m1_lrckrx: i2sm1-lrckrx {
				rockchip,pins =
					<3 GPIO_B0 RK_FUNC_6 &pcfg_pull_none>;
			};

			i2s2m1_lrcktx: i2s2m1-lrcktx {
				rockchip,pins =
					<3 GPIO_B0 RK_FUNC_4 &pcfg_pull_none>;
			};

			i2s2m1_sdi: i2s2m1-sdi {
				rockchip,pins =
					<3 GPIO_A2 RK_FUNC_6 &pcfg_pull_none>;
			};

			i2s2m1_sdo: i2s2m1-sdo {
				rockchip,pins =
					<3 GPIO_A1 RK_FUNC_6 &pcfg_pull_none>;
			};

			i2s2m1_sleep: i2s2m1-sleep {
				rockchip,pins =
					<1 GPIO_C5 RK_FUNC_GPIO &pcfg_input_high>,
					<3 GPIO_A0 RK_FUNC_GPIO &pcfg_input_high>,
					<3 GPIO_B0 RK_FUNC_GPIO &pcfg_input_high>,
					<3 GPIO_A2 RK_FUNC_GPIO &pcfg_input_high>,
					<3 GPIO_A1 RK_FUNC_GPIO &pcfg_input_high>;
			};
		};

		spdif-0 {
			spdifm0_tx: spdifm0-tx {
				rockchip,pins =
					<0 GPIO_D3 RK_FUNC_1 &pcfg_pull_none>;
			};
		};

		spdif-1 {
			spdifm1_tx: spdifm1-tx {
				rockchip,pins =
					<2 GPIO_C1 RK_FUNC_2 &pcfg_pull_none>;
			};
		};

		spdif-2 {
			spdifm2_tx: spdifm2-tx {
				rockchip,pins =
					<0 GPIO_A2 RK_FUNC_2 &pcfg_pull_none>;
			};
		};

		sdmmc0-0 {
			sdmmc0m0_pwren: sdmmc0m0-pwren {
				rockchip,pins =
					<2 GPIO_A7 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0m0_gpio: sdmmc0m0-gpio {
				rockchip,pins =
					<2 GPIO_A7 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>;
			};
		};

		sdmmc0-1 {
			sdmmc0m1_pwren: sdmmc0m1-pwren {
				rockchip,pins =
					<0 GPIO_D6 RK_FUNC_3 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0m1_gpio: sdmmc0m1-gpio {
				rockchip,pins =
					<0 GPIO_D6 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>;
			};
		};

		sdmmc0 {
			sdmmc0_clk: sdmmc0-clk {
				rockchip,pins =
					<1 GPIO_A6 RK_FUNC_1 &pcfg_pull_none_drv_4ma>;
			};

			sdmmc0_cmd: sdmmc0-cmd {
				rockchip,pins =
					<1 GPIO_A4 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0_dectn: sdmmc0-dectn {
				rockchip,pins =
					<1 GPIO_A5 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0_wrprt: sdmmc0-wrprt {
				rockchip,pins =
					<1 GPIO_A7 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0_bus1: sdmmc0-bus1 {
				rockchip,pins =
					<1 GPIO_A0 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0_bus4: sdmmc0-bus4 {
				rockchip,pins =
					<1 GPIO_A0 RK_FUNC_1 &pcfg_pull_up_drv_4ma>,
					<1 GPIO_A1 RK_FUNC_1 &pcfg_pull_up_drv_4ma>,
					<1 GPIO_A2 RK_FUNC_1 &pcfg_pull_up_drv_4ma>,
					<1 GPIO_A3 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0_gpio: sdmmc0-gpio {
				rockchip,pins =
					<1 GPIO_A6 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_A4 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_A5 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_A7 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_A3 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_A2 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_A1 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_A0 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>;
			};
		};

		sdmmc0ext {
			sdmmc0ext_clk: sdmmc0ext-clk {
				rockchip,pins =
					<3 GPIO_A2 RK_FUNC_3 &pcfg_pull_none_drv_4ma>;
			};

			sdmmc0ext_cmd: sdmmc0ext-cmd {
				rockchip,pins =
					<3 GPIO_A0 RK_FUNC_3 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0ext_wrprt: sdmmc0ext-wrprt {
				rockchip,pins =
					<3 GPIO_A3 RK_FUNC_3 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0ext_dectn: sdmmc0ext-dectn {
				rockchip,pins =
					<3 GPIO_A1 RK_FUNC_3 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0ext_bus1: sdmmc0ext-bus1 {
				rockchip,pins =
					<3 GPIO_A4 RK_FUNC_3 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0ext_bus4: sdmmc0ext-bus4 {
				rockchip,pins =
					<3 GPIO_A4 RK_FUNC_3 &pcfg_pull_up_drv_4ma>,
					<3 GPIO_A5 RK_FUNC_3 &pcfg_pull_up_drv_4ma>,
					<3 GPIO_A6 RK_FUNC_3 &pcfg_pull_up_drv_4ma>,
					<3 GPIO_A7 RK_FUNC_3 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc0ext_gpio: sdmmc0ext-gpio {
				rockchip,pins =
					<3 GPIO_A0 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<3 GPIO_A1 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<3 GPIO_A2 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<3 GPIO_A3 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<3 GPIO_A4 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<3 GPIO_A5 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<3 GPIO_A6 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<3 GPIO_A7 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>;
			};
		};

		sdmmc1 {
			sdmmc1_clk: sdmmc1-clk {
				rockchip,pins =
					<1 GPIO_B4 RK_FUNC_1 &pcfg_pull_none_drv_4ma>;
			};

			sdmmc1_cmd: sdmmc1-cmd {
				rockchip,pins =
					<1 GPIO_B5 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc1_pwren: sdmmc1-pwren {
				rockchip,pins =
					<1 GPIO_C2 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc1_wrprt: sdmmc1-wrprt {
				rockchip,pins =
					<1 GPIO_C4 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc1_dectn: sdmmc1-dectn {
				rockchip,pins =
					<1 GPIO_C3 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc1_bus1: sdmmc1-bus1 {
				rockchip,pins =
					<1 GPIO_B6 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc1_bus4: sdmmc1-bus4 {
				rockchip,pins =
					<1 GPIO_B6 RK_FUNC_1 &pcfg_pull_up_drv_4ma>,
					<1 GPIO_B7 RK_FUNC_1 &pcfg_pull_up_drv_4ma>,
					<1 GPIO_C0 RK_FUNC_1 &pcfg_pull_up_drv_4ma>,
					<1 GPIO_C1 RK_FUNC_1 &pcfg_pull_up_drv_4ma>;
			};

			sdmmc1_gpio: sdmmc1-gpio {
				rockchip,pins =
					<1 GPIO_B4 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_B5 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_B6 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_A7 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_C0 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_C1 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_C2 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_C3 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>,
					<1 GPIO_C4 RK_FUNC_GPIO &pcfg_pull_up_drv_4ma>;
			};
		};

		emmc {
			emmc_clk: emmc-clk {
				rockchip,pins =
					<3 GPIO_C5 RK_FUNC_2 &pcfg_pull_none_drv_8ma>;
			};

			emmc_cmd: emmc-cmd {
				rockchip,pins =
					<3 GPIO_C3 RK_FUNC_2 &pcfg_pull_up_drv_8ma>;
			};

			emmc_pwren: emmc-pwren {
				rockchip,pins =
					<3 GPIO_C6 RK_FUNC_2 &pcfg_pull_none>;
			};

			emmc_rstnout: emmc-rstnout {
				rockchip,pins =
					<3 GPIO_C4 RK_FUNC_2 &pcfg_pull_none>;
			};

			emmc_bus1: emmc-bus1 {
				rockchip,pins =
					<0 GPIO_A7 RK_FUNC_2 &pcfg_pull_up_drv_8ma>;
			};

			emmc_bus4: emmc-bus4 {
				rockchip,pins =
					<0 GPIO_A7 RK_FUNC_2 &pcfg_pull_up_drv_8ma>,
					<2 GPIO_D4 RK_FUNC_2 &pcfg_pull_up_drv_8ma>,
					<2 GPIO_D5 RK_FUNC_2 &pcfg_pull_up_drv_8ma>,
					<2 GPIO_D6 RK_FUNC_2 &pcfg_pull_up_drv_8ma>;
			};

			emmc_bus8: emmc-bus8 {
				rockchip,pins =
					<0 GPIO_A7 RK_FUNC_2 &pcfg_pull_up_drv_8ma>,
					<2 GPIO_D4 RK_FUNC_2 &pcfg_pull_up_drv_8ma>,
					<2 GPIO_D5 RK_FUNC_2 &pcfg_pull_up_drv_8ma>,
					<2 GPIO_D6 RK_FUNC_2 &pcfg_pull_up_drv_8ma>,
					<2 GPIO_D7 RK_FUNC_2 &pcfg_pull_up_drv_8ma>,
					<3 GPIO_C0 RK_FUNC_2 &pcfg_pull_up_drv_8ma>,
					<3 GPIO_C1 RK_FUNC_2 &pcfg_pull_up_drv_8ma>,
					<3 GPIO_C2 RK_FUNC_2 &pcfg_pull_up_drv_8ma>;
			};
		};

		pwm0 {
			pwm0_pin: pwm0-pin {
				rockchip,pins =
					<2 GPIO_A4 RK_FUNC_1 &pcfg_pull_none>;
			};
		};

		pwm1 {
			pwm1_pin: pwm1-pin {
				rockchip,pins =
					<2 GPIO_A5 RK_FUNC_1 &pcfg_pull_none>;
			};
		};

		pwm2 {
			pwm2_pin: pwm2-pin {
				rockchip,pins =
					<2 GPIO_A6 RK_FUNC_1 &pcfg_pull_none>;
			};
		};

		pwmir {
			pwmir_pin: pwmir-pin {
				rockchip,pins =
					<2 GPIO_A2 RK_FUNC_1 &pcfg_pull_none>;
			};
		};

		gmac-0 {
			rgmiim0_pins: rgmiim0-pins {
				rockchip,pins =
					/* mac_txclk */
					<0 GPIO_B0 RK_FUNC_1 &pcfg_pull_none_drv_12ma>,
					/* mac_rxclk */
					<0 GPIO_B2 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_mdio */
					<0 GPIO_B3 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_txen */
					<0 GPIO_B4 RK_FUNC_1 &pcfg_pull_none_drv_12ma>,
					/* mac_clk */
					<0 GPIO_D0 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_rxdv */
					<0 GPIO_D1 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_mdc */
					<0 GPIO_C3 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_rxd1 */
					<0 GPIO_B6 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_rxd0 */
					<0 GPIO_B7 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_txd1 */
					<0 GPIO_C0 RK_FUNC_1 &pcfg_pull_none_drv_12ma>,
					/* mac_txd0 */
					<0 GPIO_C1 RK_FUNC_1 &pcfg_pull_none_drv_12ma>,
					/* mac_rxd3 */
					<0 GPIO_C4 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_rxd2 */
					<0 GPIO_C5 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_txd3 */
					<0 GPIO_C7 RK_FUNC_1 &pcfg_pull_none_drv_12ma>,
					/* mac_txd2 */
					<0 GPIO_C6 RK_FUNC_1 &pcfg_pull_none_drv_12ma>;
			};

			rmiim0_pins: rmiim0-pins {
				rockchip,pins =
					/* mac_mdio */
					<0 GPIO_B3 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_txen */
					<0 GPIO_B4 RK_FUNC_1 &pcfg_pull_none_drv_12ma>,
					/* mac_clk */
					<0 GPIO_D0 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_rxer */
					<0 GPIO_B5 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_rxdv */
					<0 GPIO_D1 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_mdc */
					<0 GPIO_C3 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_rxd1 */
					<0 GPIO_B6 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_rxd0 */
					<0 GPIO_B6 RK_FUNC_1 &pcfg_pull_none>,
					/* mac_txd1 */
					<0 GPIO_C0 RK_FUNC_1 &pcfg_pull_none_drv_12ma>,
					/* mac_txd0 */
					<0 GPIO_C1 RK_FUNC_1 &pcfg_pull_none_drv_12ma>;
			};
		};

		gmac-1 {
			rgmiim1_pins: rgmiim1-pins {
				rockchip,pins =
					/* mac_txclk */
					<1 GPIO_B4 RK_FUNC_2 &pcfg_pull_none_drv_12ma>,
					/* mac_rxclk */
					<1 GPIO_B5 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_mdio */
					<1 GPIO_C3 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_txen */
					<1 GPIO_D1 RK_FUNC_2 &pcfg_pull_none_drv_12ma>,
					/* mac_clk */
					<1 GPIO_C5 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_rxdv */
					<1 GPIO_C6 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_mdc */
					<1 GPIO_C7 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_rxd1 */
					<1 GPIO_B2 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_rxd0 */
					<1 GPIO_B3 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_txd1 */
					<1 GPIO_B0 RK_FUNC_2 &pcfg_pull_none_drv_12ma>,
					/* mac_txd0 */
					<1 GPIO_B1 RK_FUNC_2 &pcfg_pull_none_drv_12ma>,
					/* mac_rxd3 */
					<1 GPIO_B6 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_rxd2 */
					<1 GPIO_B7 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_txd3 */
					<1 GPIO_C0 RK_FUNC_2 &pcfg_pull_none_drv_12ma>,
					/* mac_txd2 */
					<1 GPIO_C1 RK_FUNC_2 &pcfg_pull_none_drv_12ma>;
			};

			rmiim1_pins: rmiim1-pins {
				rockchip,pins =
					/* mac_mdio */
					<1 GPIO_C3 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_txen */
					<1 GPIO_D1 RK_FUNC_2 &pcfg_pull_none_drv_12ma>,
					/* mac_clk */
					<1 GPIO_C5 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_rxer */
					<1 GPIO_D0 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_rxdv */
					<1 GPIO_C6 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_mdc */
					<1 GPIO_C7 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_rxd1 */
					<1 GPIO_B2 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_rxd0 */
					<1 GPIO_B3 RK_FUNC_2 &pcfg_pull_none>,
					/* mac_txd1 */
					<1 GPIO_B0 RK_FUNC_2 &pcfg_pull_none_drv_12ma>,
					/* mac_txd0 */
					<1 GPIO_B1 RK_FUNC_2 &pcfg_pull_none_drv_12ma>;
			};
		};

		tsadc_pin {
			tsadc_int: tsadc-int {
				rockchip,pins =
					<2 GPIO_B5 RK_FUNC_2 &pcfg_pull_none>;
			};
			tsadc_gpio: tsadc-gpio {
				rockchip,pins =
					<2 GPIO_B5 RK_FUNC_GPIO &pcfg_pull_none>;
			};
		};

		hdmi_pin {
			hdmi_cec: hdmi-cec {
				rockchip,pins =
					<0 GPIO_A3 RK_FUNC_1 &pcfg_pull_none>;
			};

			hdmi_hpd: hdmi-hpd {
				rockchip,pins =
					<0 GPIO_A4 RK_FUNC_1 &pcfg_pull_down>;
			};
		};
	};
};
